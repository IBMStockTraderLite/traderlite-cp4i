#       Copyright 2017 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#Deploy the pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-portfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-portfolio

  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-portfolio
        solution: {{ .Release.Name }}-lite-trader
    spec:
      containers:
      - name: {{ .Release.Name }}-portfolio
        image: "{{ .Values.portfolioMicroservice.image.repository }}:{{ .Values.portfolioMicroservice.image.tag }}"
        env:
          - name: JDBC_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mariadb.db.host
          - name: JDBC_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mariadb.db.port
          - name: JDBC_DB
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mariadb.db.name
          - name: JDBC_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: mariadb.db.id
          - name: JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: mariadb.db.pwd
{{- if .Values.kafkaIntegration.enabled }}
          - name: MQ_QUEUE_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mq.qname

          - name: MQ_QUEUE_MGR
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mq.qmgr

          - name: MQ_LISTENER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mq.listener

          - name: MQ_CHANNEL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: mq.channel

          - name: MQ_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: mq.user

          - name: MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: mq.password

{{- end }}
{{- if .Values.salesforceIntegration.enabled }}
          - name: SALESFORCE_INTEGRATION_FLOW_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: salesforce.flow.url
          - name: SALESFORCE_INTEGRATION_FLOW_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: salesforce.flow.path
          - name: SALESFORCE_INTEGRATION_FLOW_APIKEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: salesforce.flow.apiKey
{{- end }}
          - name: STOCK_QUOTE_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: stockQuote.url
          - name: TRADE_HISTORY_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: tradeHistory.url
          - name: EVENT_STREAMS_STATE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: eventStreamsState
          - name: SALESFORCE_INTEGRATION_STATE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: salesforceIntegrationState
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /portfolio/readiness
            port: 8080
          initialDelaySeconds: 45
          timeoutSeconds: 3
          periodSeconds: 10
        resources:
          limits:
            cpu: 600m
            memory: 500Mi
          requests:
            cpu: 600m
            memory: 500Mi

        imagePullPolicy: {{ .Values.portfolioMicroservice.image.pullPolicy }}
      {{- if .Values.portfolioMicroservice.image.pullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.portfolioMicroservice.image.pullSecrets }}
      {{- end }}
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-portfolio-service
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: {{ .Release.Name }}-portfolio
