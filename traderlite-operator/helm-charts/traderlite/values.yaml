# Default values for traderlite.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Default values for trader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

kafkaAccess:
  topic: student001
  bootstrapHost: "light-insecure-kafka-bootstrap.cp4i-es:9092"
mqaccess:
  qname: TRADER.QUEUE
  qmgr: QMTRADER
  channel: TRADER.TO.MQ
  listener: quickstart-cp4i-ibm-mq.cp4i-mq(1414)
  user: app
  password: passw0rd

kafkaIntegration:
  enabled: false

salesforceIntegration:
  enabled: false
  flow:
    url: <your app connect flow endpoint>
    path: "/Client"
    apiKey: "notsecured"

kafkaConnect:
  enabled: false
  cluster: my-connect-cluster

stockQuoteMicroservice:
  apic:
    url: https://stock-trader-quote.us-south.cf.appdomain.cloud
    clientId: MyClientId

tradeHistoryDB:
  mongodbDatabase: trader
  mongodbUsername: traderuser
  mongodbPassword: n0tSecure
  mongodbRootPassword: n0tSecure
  nameOverride: mongodb

  persistence:
    enabled: false
  securityContext:
    enabled: true
    fsGroup: null
    runAsUser: null
  service:
    ## Kubernetes service type, ClusterIP and NodePort are supported at present
    type: ClusterIP
    # clusterIp: None
    port: 27017

tradeTransactionalDB:
  nameOverride: mariadb
  master:
    persistence:
      ## If true, use a Persistent Volume Claim, If false, use emptyDir
      ##
      enabled: false
      # storageClass: ''-''
    resources:
     limits:
        cpu: 500m
        memory: 500Mi
     requests:
        cpu: 200m
        memory: 250Mi

  slave:
    replicas: 0

  db:
    name: "trader"
    user: "traderuser"
    password: n0tSecure
    forcePassword: false

  service:
    ## Kubernetes service type, ClusterIP and NodePort are supported at present
    type: ClusterIP
    # clusterIp: None
    port: 3306

  ## Pods Service Account
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: false
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the mariadb.fullname template
    # name:

  ## Role Based Access
  ## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
  ##

  rbac:
    create: false

  ## Pod Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    enabled: true
    fsGroup: null
    runAsUser: null

  # # Use existing secret (ignores root, db and replication passwords)
  # existingSecret:

  rootUser:
    ## MariaDB admin password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-the-root-password-on-first-run
    ##

    ##
    ## Option to force users to specify a password. That is required for ''helm upgrade'' to work properly.
    ## If it is not force, a random password will be generated.
    password: n0tSecure
    forcePassword: false

  replication:
    ## Enable replication. This enables the creation of replicas of MariaDB. If false, only a
    ## master deployment would be created
    enabled: false


  ## initdb scripts
  ## Specify dictionnary of scripts to be run at first boot
  ## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
  ##
  initdbScriptsConfigMap: mariadb-init-scripts
